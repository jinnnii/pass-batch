plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.jinnnii'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	// add lombok test
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	// add junit 5
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
	// mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
	// spring reactive web (WebClient)
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// spring config processor : 사용자 정의 properties (@ConfigurationProperties)
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	// hibernate-types (json string type)
	implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
	// async item processor, writer
	implementation 'org.springframework.batch:spring-batch-integration'
}

tasks.named('test') {
	useJUnitPlatform()
}
